#BlueJ class context
comment0.target=BoardPanel
comment0.text=\r\n\ Write\ a\ description\ of\ class\ BoardPanel\ here.\r\n\r\n\ @author\ Kaley,\ Tyler,\ Ben,\ Sean,\ Zach\r\n\ @version\ 4/5/18\r\n
comment1.params=
comment1.target=BoardPanel()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ BoardPanel\r\n
comment10.params=g
comment10.target=void\ paintComponent(java.awt.Graphics)
comment10.text=\r\n\ creates\ the\ graphics\ on\ the\ screen\ \r\n\ \r\n\ @param\ g,\ the\ graphic\r\n
comment11.params=won
comment11.target=java.lang.String\ displayMessage(boolean)
comment12.params=xOrY\ direction
comment12.target=BoardPanel.BoardImage\ closestPiece(boolean,\ int)
comment12.text=\r\n\ Finds\ and\ returns\ the\ closest\ BoardImage\r\n\ \r\n\ @param\ boolean\ xOrY\ \ true\ if\ searching\ x\ direction,\ false\ if\ y\r\n\ @param\ int\ \ \ \ \ direction\ \ \ \ \ which\ direction\ the\ piece\ we\ are\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ drawing\ from\ is\ facing\r\n\ \r\n\ @return\ BoardImage\ \ \ closest\ on\ board\ in\ specified\ direction\r\n\ \r\n
comment13.params=
comment13.target=boolean\ checkGameStatus()
comment13.text=\r\n\ returns\ true\ if\ every\ piece\ has\ been\ hit,\ false\ otherwise\r\n\ \r\n\ @return\ true\ if\ each\ piece\ is\ hit.\ false\ otherwise\r\n
comment14.params=
comment14.target=void\ createAndShowGUI()
comment14.text=\r\n\ Creates\ the\ graphics\ of\ the\ board\r\n
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment15.text=\r\n\ main\ method\ to\ call\ upon\ the\ graphics\ method\ and\ \r\n\ create\ the\ board\ and\ the\ graphics\r\n
comment16.params=
comment16.target=void\ run()
comment17.params=space
comment17.target=int\ spaceX(int)
comment17.text=\r\n\ finds\ the\ x\ coordinate\ of\ a\ piece\ at\ a\ given\ space\r\n\ \r\n\ @param\ space,\ the\ space\ where\ the\ piece\ is\ \r\n\ @return\ the\ x\ coordinate\ number\r\n
comment18.params=space
comment18.target=int\ spaceY(int)
comment18.text=\r\n\ finds\ the\ y\ coordinate\ of\ a\ piece\ at\ a\ given\ space\r\n\ \r\n\ @param\ space,\ the\ space\ where\ the\ piece\ is\ \r\n\ @return\ the\ y\ coordinate\ number\r\n
comment19.params=x\ y
comment19.target=int\ whatSpace(int,\ int)
comment19.text=\r\n\ This\ method\ is\ a\ helper\ method\ used\ to\ find\ where\ a\ piece\ will\ go.\ Based\ on\ where\ the\ click\ is,\ \r\n\ it\ will\ determine\ the\ space\r\n\ 1\ 2\ 3\ 4\ 5\r\n\ 6\ 7\ 8\ 9\ 10\r\n\ etc...\r\n\ Every\ 5\ spaces\ repeats\ the\ same\ x-coordinates\ with\ different\ shared\ Y-coordinates\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ X1\=\ 111->\ 218\ \ \ \ X2\=\ 252->\ 359\ \ \ \ X3\=\ 393->\ 500\ \ \ X4\=\ 534->\ 641\ \ \ X5\=\ 675->\ 782\r\n\ \ Y1\=\ 90-197\r\n\ \ Y2\=\ 231-338\r\n\ \ Y3\=\ 372-479\r\n\ \ Y4\=\ 513-620\r\n\ \ Y5\=\ 654-761\r\n\ \ \r\n\ \ @param\ x\ The\ x\ coordinate\r\n\ \ @param\ y\ The\ Y\ coordinate\r\n\ \ @return\ The\ space\ that\ is\ currently\ being\ looked\ at\r\n
comment2.params=images\ x\ y\ rotatable\ movable\ target
comment2.target=BoardPanel.BoardImage\ createPiece(java.lang.String[],\ int,\ int,\ boolean,\ boolean,\ boolean)
comment2.text=\r\n\ creates\ a\ new\ board\ image\ \r\n\ \r\n\ @param\ images,\ the\ string\ array\ of\ images\ \r\n\ @param\ x,\ the\ x\ coordinate\r\n\ @param\ y,\ the\ y\ coordinate\r\n\ @param\ rotatable,\ true\ if\ the\ piece\ is\ rotatable\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ the\ piece\ is\ not\ rotatable\r\n\ @param\ movable,\ true\ if\ the\ piece\ is\ movable\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ the\ piece\ is\ not\ movable\r\n\ @param\ target,\ true\ if\ ending\ piece\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ not\r\n\ @return\ the\ new\ board\ image\r\n
comment20.params=choice
comment20.target=void\ reset(java.lang.String)
comment21.params=
comment21.target=void\ info()
comment3.params=e
comment3.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment3.text=\r\n\ invoked\ when\ the\ mouse\ the\ mouse\ enters\ a\ component\r\n\ \r\n\ @param\ e,\ the\ mouse\ event\ that\ happens\r\n
comment4.params=e
comment4.target=void\ mouseExited(java.awt.event.MouseEvent)
comment4.text=\r\n\ invoked\ when\ the\ mouse\ exits\ a\ component\r\n\ \r\n\ @param\ e,\ the\ mouse\ event\ that\ happens\r\n
comment5.params=e
comment5.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment5.text=\r\n\ method\ to\ carry\ out\ if\ the\ mouse\ is\ clicked\r\n\ \r\n\ @param\ e,\ the\ mouse\ event\ that\ happens\r\n
comment6.params=e
comment6.target=void\ mousePressed(java.awt.event.MouseEvent)
comment6.text=\r\n\ Invoked\ when\ the\ mouse\ buttons\ has\ been\ pressed\ on\ a\ component\r\n\ \r\n\ @param\ e,\ the\ mouse\ event\ that\ happens\r\n
comment7.params=e
comment7.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment7.text=\r\n\ Invoked\ when\ a\ mouse\ button\ has\ been\ released\ on\ a\ component\r\n\r\n\ @param\ e,\ the\ mouse\ event\ that\ happens\r\n
comment8.params=e
comment8.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment8.text=\r\n\ Invoked\ when\ a\ mouse\ cursor\ has\ been\ moved\ onto\ a\ component\ but\ no\ buttons\ have\ been\ pushed.\r\n\r\n\ @param\ e,\ the\ mouse\ event\ that\ happens\r\n
comment9.params=e
comment9.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment9.text=\r\n\ Invoked\ when\ a\ mouse\ button\ is\ pressed\ on\ a\ component\ and\ then\ dragged.\r\n\r\n\ @param\ e,\ the\ mouse\ event\ that\ happens\r\n
numComments=22
